.TH "sources/core/utilitaires/epur_str.cpp" 3 "Sun Sep 27 2015" "encode-o-matic" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sources/core/utilitaires/epur_str.cpp \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'utilitaires\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "template void \fBno_tabs< char * >\fP (char *str)"
.br
.ti -1c
.RI "template void \fBno_tabs< std::string & >\fP (std::string &str)"
.br
.ti -1c
.RI "template int \fBno_spaces_duplicates< char * >\fP (char *str)"
.br
.ti -1c
.RI "template int \fBno_spaces_duplicates< std::string & >\fP (std::string &str)"
.br
.ti -1c
.RI "template void \fBno_space_in_begining< char * >\fP (char *str)"
.br
.ti -1c
.RI "template void \fBno_space_in_begining< std::string & >\fP (std::string &str)"
.br
.ti -1c
.RI "template void \fBno_space_in_end< char * >\fP (char *str)"
.br
.ti -1c
.RI "template void \fBno_space_in_end< std::string & >\fP (std::string &str)"
.br
.ti -1c
.RI "template void \fBepur_str< char * >\fP (char *str)"
.br
.ti -1c
.RI "template void \fBepur_str< std::string >\fP (std::string str)"
.br
.ti -1c
.RI "template void \fBepur_str< std::string & >\fP (std::string &str)"
.br
.ti -1c
.RI "template<typename T > void \fBno_tabs\fP (T str)"
.br
.ti -1c
.RI "template<typename T > int \fBno_spaces_duplicates\fP (T str)"
.br
.ti -1c
.RI "template<typename T > void \fBno_space_in_begining\fP (T str)"
.br
.ti -1c
.RI "template<typename T > void \fBno_space_in_end\fP (T str)"
.br
.ti -1c
.RI "template<typename T > void \fBepur_str\fP (T str)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "template<typename T > void epur_str (T str)"

.SS "template void \fBepur_str\fP< char * > (char * str)"

.SS "template void \fBepur_str\fP< std::string & > (std::string & str)"

.SS "template void \fBepur_str\fP< std::string > (std::string str)"

.SS "template<typename T > void no_space_in_begining (T str)"

.SS "template void \fBno_space_in_begining\fP< char * > (char * str)"

.SS "template void \fBno_space_in_begining\fP< std::string & > (std::string & str)"

.SS "template<typename T > void no_space_in_end (T str)"

.SS "template void \fBno_space_in_end\fP< char * > (char * str)"

.SS "template void \fBno_space_in_end\fP< std::string & > (std::string & str)"

.SS "template<typename T > int no_spaces_duplicates (T str)"

.SS "template int \fBno_spaces_duplicates\fP< char * > (char * str)"

.SS "template int \fBno_spaces_duplicates\fP< std::string & > (std::string & str)"

.SS "template<typename T > void no_tabs (T str)"

.SS "template void \fBno_tabs\fP< char * > (char * str)"

.SS "template void \fBno_tabs\fP< std::string & > (std::string & str)"

.SH "Author"
.PP 
Generated automatically by Doxygen for encode-o-matic from the source code\&.
